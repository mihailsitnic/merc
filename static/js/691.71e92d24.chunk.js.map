{"version":3,"file":"static/js/691.71e92d24.chunk.js","mappings":"kPAaMA,EACW,GADXA,EAEc,GAFdA,EAGqB,GAHrBA,EAIc,GAJdA,EAKc,GALdA,EAMmB,GANnBA,EAOiB,GAPjBA,EAQqB,GARrBA,EASuB,GATvBA,EAUuB,GAkB7B,EAfsB,SAACC,GACnB,MAAO,CACHC,YAAaD,EAAKC,aAAeF,EACjCG,eAAgBF,EAAKE,gBAAkBH,EACvCI,sBAAuBH,EAAKG,uBAAyBJ,EACrDK,eAAgBJ,EAAKI,gBAAkBL,EACvCM,eAAgBL,EAAKK,gBAAkBN,EACvCO,oBAAqBN,EAAKM,qBAAuBP,EACjDQ,kBAAmBP,EAAKO,mBAAqBR,EAC7CS,sBAAuBR,EAAKQ,uBAAyBT,EACrDU,wBAAyBT,EAAKS,yBAA2BV,EACzDW,wBAAyBV,EAAKU,yBAA2BX,EAEjE,E,8BCnBA,I,6IAAA,GAlBA,SACIY,EACAC,EACAC,EACAC,EACAC,GAGAC,YAAU,uBAAC,mFAGPH,EAASI,EAAAA,EAAYN,IAErBG,EAAMI,QAAQC,KAAK,YAAD,OAAaJ,IAC/BH,EAAQQ,eAAc,GAAO,2CAC9B,IACP,E,gGCbaC,IAAQC,EAAAA,GAAAA,SAAOC,EAAAA,GAAPD,CAAY,iKAIjBE,GAAAA,EAAAA,MAELC,GAAAA,EAAAA,SAIEC,GAAUJ,GAAAA,QAAAA,QAAc,gGAG1BG,GAAAA,EAAAA,SAKEE,GAAML,GAAAA,QAAAA,IAAU,yKAMlBG,GAAAA,EAAAA,SAKEG,GAAMN,GAAAA,QAAAA,IAAU,mJAGlBG,GAAAA,EAAAA,SAIL,SAACX,GAAU,OACbA,EAAMe,QACNC,EAAAA,GAAAA,KAAG,gDAEF,IAGD,SAAChB,GAAU,OACXA,EAAMe,QACNC,EAAAA,GAAAA,KAAG,kEAEF,IAiCQC,IA9BST,GAAAA,QAAAA,IAAU,4HAKrBG,GAAAA,EAAAA,SAIUH,GAAAA,QAAAA,GAAS,8HAInBE,GAAAA,EAAAA,MAEAC,GAAAA,EAAAA,SAISH,GAAAA,QAAAA,GAAS,oJAKlBE,GAAAA,EAAAA,MAEAC,GAAAA,EAAAA,SAIUH,GAAAA,QAAAA,IAAU,4IAOpBG,GAAAA,EAAAA,UAKEO,IAAQV,EAAAA,GAAAA,SAAOW,EAAAA,GAAPX,CAAa,ihBAKZE,GAAAA,EAAAA,MAENA,GAAAA,EAAAA,MAELA,GAAAA,EAAAA,MAKaA,GAAAA,EAAAA,MACCA,GAAAA,EAAAA,MASdC,GAAAA,EAAAA,SAGP,SAACX,GAAU,OACXA,EAAMoB,aACNJ,EAAAA,GAAAA,KAAG,4SACaN,GAAAA,EAAAA,KAEMA,GAAAA,EAAAA,IACCA,GAAAA,EAAAA,IAGCA,GAAAA,EAAAA,IACCA,GAAAA,EAAAA,IACPA,GAAAA,EAAAA,KAEjB,IA6CQW,IA1COb,GAAAA,QAAAA,IAAU,yRACdE,GAAAA,EAAAA,MASLC,GAAAA,EAAAA,SAMSH,GAAAA,QAAAA,MAAY,qKAQ5B,SAACR,GAAU,OACXA,EAAMsB,SACNN,EAAAA,GAAAA,KAAG,mEAEF,IAGmBR,GAAAA,QAAAA,GAAS,mJACtBE,GAAAA,EAAAA,MAKAC,GAAAA,EAAAA,SAKUH,GAAAA,QAAAA,MAAY,0KAO7B,SAACR,GAAU,OACXA,EAAMuB,MACNP,EAAAA,GAAAA,KAAG,wDAEF,GAEML,GAAAA,EAAAA,UAuEEa,KAnEWhB,EAAAA,GAAAA,SAAOW,EAAAA,GAAPX,CAAa,geASxBE,GAAAA,EAAAA,MAMaA,GAAAA,EAAAA,IASfC,GAAAA,EAAAA,SAIOH,GAAAA,QAAAA,GAAS,8CAITA,GAAAA,QAAAA,GAAS,mGAQLA,GAAAA,QAAAA,GAAS,gDAITA,GAAAA,QAAAA,GAAS,gJAEpBE,GAAAA,EAAAA,OAQSF,GAAAA,QAAAA,KAAW,qFACpBE,GAAAA,EAAAA,OAKgBF,GAAAA,QAAAA,EAAQ,sGAIxBE,GAAAA,EAAAA,OAGSF,GAAAA,QAAAA,IAAU,iEAwJjBiB,IAnJWjB,GAAAA,QAAAA,IAAU,uBAENA,GAAAA,QAAAA,IAAU,6EAKlBA,GAAAA,QAAAA,IAAU,4GAOFA,GAAAA,QAAAA,MAAY,4CAIhBA,EAAAA,GAAAA,SAAOW,EAAAA,GAAPX,CAAa,2VAIfE,GAAAA,EAAAA,MAENA,GAAAA,EAAAA,MAMQA,GAAAA,EAAAA,MACCA,GAAAA,EAAAA,OAIFF,GAAAA,QAAAA,IAAU,0HAUXA,GAAAA,QAAAA,OAAa,iXACnBE,GAAAA,EAAAA,KACLA,GAAAA,EAAAA,KAoBWF,GAAAA,QAAAA,IAAU,mVAUhBE,GAAAA,EAAAA,MACLA,GAAAA,EAAAA,OAKcF,GAAAA,QAAAA,OAAa,6VACtBE,GAAAA,EAAAA,MACLA,GAAAA,EAAAA,OAmBeF,GAAAA,QAAAA,GAAS,2NAEnBE,GAAAA,EAAAA,OAOZ,SAACV,GAAU,OACXA,EAAM0B,SACNV,EAAAA,GAAAA,KAAG,kHAGF,IAED,SAAChB,GAAU,OACVA,EAAM0B,SACPV,EAAAA,GAAAA,KAAG,oDAEF,GAEML,GAAAA,EAAAA,SAIeH,GAAAA,QAAAA,GAAS,qKAKjBE,GAAAA,EAAAA,MAGPC,GAAAA,EAAAA,SAIWH,GAAAA,QAAAA,IAAU,+CACrBG,GAAAA,EAAAA,SAIQH,GAAAA,QAAAA,IAAU,oGAGlBE,GAAAA,EAAAA,KAEAC,GAAAA,EAAAA,UA6BEgB,IAzBOnB,GAAAA,QAAAA,IAAU,8IAInBG,GAAAA,EAAAA,SAMYH,GAAAA,QAAAA,MAAY,qQACnBE,GAAAA,EAAAA,MASLC,GAAAA,EAAAA,SAKWH,GAAAA,QAAAA,OAAa,qOAGTE,GAAAA,EAAAA,MAKfC,GAAAA,EAAAA,U,UCrQX,IAAeiB,EAAAA,EAAAA,KArLkB,SAAC5B,GAC9B,IAAQH,EAA+CG,EAA/CH,OAAQgC,EAAuC7B,EAAvC6B,OAAQC,EAA+B9B,EAA/B8B,QAASC,EAAsB/B,EAAtB+B,aAAcC,EAAQhC,EAARgC,IACzCC,GAAMC,EAAAA,GAAAA,KAEZ,OACI,mCACI,WAACtB,GAAO,YACJ,UAACK,GAAK,WACF,WAACJ,GAAG,YACA,UAACC,GAAG,WACA,WAACD,GAAG,YACA,WAACC,IAAG,oBAAKd,GAAK,IAAEe,MAAM,KAAI,WACtB,WAACM,IAAK,oBAAKrB,GAAK,IAAEuB,KAAG,aAChBY,EAAAA,GAAAA,GAAE,mBAAkB,KAAE,UAACV,GAAG,qBAE/B,UAACD,GAAI,WACD,UAACN,GAAK,CACFkB,KAAK,iBACLhB,WACIS,EAAOzC,gBACP0C,EAAQ1C,wBAKxB,WAAC0B,IAAG,oBAAKd,GAAK,IAAEe,MAAM,KAAI,WACtB,WAACM,IAAK,oBAAKrB,GAAK,IAAEuB,KAAG,aAChBY,EAAAA,GAAAA,GAAE,0BAAyB,KAAE,UAACV,GAAG,qBAEtC,UAACD,GAAI,WACD,UAACN,GAAK,CACFkB,KAAK,wBACLhB,WACIS,EAAOxC,uBACPyC,EAAQzC,oCAOhC,UAACyB,GAAG,WACA,WAACD,GAAG,YACA,WAACC,IAAG,oBAAKd,GAAK,IAAEe,MAAM,KAAI,WACtB,WAACM,IAAK,oBAAKrB,GAAK,IAAEuB,KAAG,aAChBY,EAAAA,GAAAA,GAAE,mBAAkB,KAAE,UAACV,GAAG,qBAE/B,UAACD,GAAI,WACD,UAACN,GAAK,CACFkB,KAAK,iBACLhB,WACIS,EAAOvC,gBACPwC,EAAQxC,wBAKxB,WAACwB,IAAG,oBAAKd,GAAK,IAAEe,MAAM,KAAI,WACtB,WAACM,IAAK,oBAAKrB,GAAK,IAAEuB,KAAG,aAChBY,EAAAA,GAAAA,GAAE,mBAAkB,KAAE,UAACV,GAAG,qBAE/B,UAACD,GAAI,WACD,UAACN,GAAK,CACFkB,KAAK,iBACLhB,WACIS,EAAOtC,gBACPuC,EAAQvC,kCAUxC,UAAC0B,GAAK,WACF,WAACJ,GAAG,YACA,UAACC,GAAG,WACA,WAACD,GAAG,YACA,WAACC,IAAG,oBAAKd,GAAK,IAAEe,MAAM,KAAI,WACtB,WAACM,IAAK,oBAAKrB,GAAK,IAAEuB,KAAG,aAChBY,EAAAA,GAAAA,GAAE,yBAAwB,KAAE,UAACV,GAAG,qBAErC,UAACD,GAAI,WACD,UAACN,GAAK,CACFkB,KAAK,sBACLhB,WACIS,EAAOrC,qBACPsC,EAAQtC,6BAKxB,WAACsB,IAAG,oBAAKd,GAAK,IAAEe,MAAM,KAAI,WACtB,WAACM,IAAK,oBAAKrB,GAAK,IAAEuB,KAAG,aAChBY,EAAAA,GAAAA,GAAE,uBAAsB,KAAE,UAACV,GAAG,qBAEnC,UAACD,GAAI,WACD,UAACN,GAAK,CACFkB,KAAK,oBACLhB,WACIS,EAAOpC,mBACPqC,EAAQrC,gCAOhC,UAACqB,GAAG,WACA,WAACD,GAAG,YACA,WAACC,IAAG,oBAAKd,GAAK,IAAEe,MAAM,KAAI,WACtB,WAACM,IAAK,oBAAKrB,GAAK,IAAEuB,KAAG,aAChBY,EAAAA,GAAAA,GAAE,2BAA0B,KAAE,UAACV,GAAG,qBAEvC,UAACD,GAAI,WACD,UAACN,GAAK,CACFkB,KAAK,wBACLhB,WACIS,EAAOnC,uBACPoC,EAAQpC,+BAKxB,WAACoB,IAAG,oBAAKd,GAAK,IAAEe,MAAM,KAAI,WACtB,WAACM,IAAK,oBAAKrB,GAAK,IAAEuB,KAAG,aAChBY,EAAAA,GAAAA,GAAE,gBAAe,KAAE,UAACV,GAAG,qBAE5B,UAACD,GAAI,WACD,UAAC,KAAM,CAACY,KAAK,cAAcF,QAASD,EAAKD,IAAKA,EAAKK,aAAcxC,EAAOV,+BAQhG,UAAC8B,GAAK,WACF,WAACJ,GAAG,YACA,WAACC,GAAG,YACA,WAACO,GAAK,YACDc,EAAAA,GAAAA,GAAE,8BAA6B,KAAE,UAACV,GAAG,oBAE1C,UAACD,GAAI,WACD,UAACN,GAAK,CACFkB,KAAK,0BACLhB,WACIS,EAAOlC,yBACPmC,EAAQnC,gCAKxB,WAACmB,GAAG,YACA,WAACO,GAAK,YACDc,EAAAA,GAAAA,GAAE,8BAA6B,KAAE,UAACV,GAAG,oBAE1C,UAACD,GAAI,WACD,UAACN,GAAK,CACFkB,KAAK,0BACLhB,WACIS,EAAOjC,yBACPkC,EAAQlC,wCAQpC,UAAC+B,GAAM,WACH,UAAC,KAAM,CAACW,MAAI,EAACC,MAAM,OAAOC,OAAQT,EAAcU,KAAK,SAAQ,UACxDN,EAAAA,GAAAA,GAAE,sBAKvB,ICnJA,GArCiB,SAACtC,GACd,IAAIgC,EAAc,CAAC,EAiCnB,OA/BKhC,EAAOV,cACR0C,EAAO1C,YAAc,YAEpBU,EAAOT,iBACRyC,EAAOzC,eAAiB,YAEvBS,EAAOR,wBACRwC,EAAOxC,sBAAwB,YAE9BQ,EAAOP,iBACRuC,EAAOvC,eAAiB,YAEvBO,EAAON,iBACRsC,EAAOtC,eAAiB,YAEvBM,EAAOL,sBACRqC,EAAOrC,oBAAsB,YAE5BK,EAAOJ,oBACRoC,EAAOpC,kBAAoB,YAE1BI,EAAOH,wBACRmC,EAAOnC,sBAAwB,YAE9BG,EAAOF,0BACRkC,EAAOlC,wBAA0B,YAEhCE,EAAOD,0BACRiC,EAAOjC,wBAA0B,YAG9BiC,CACX,EC9CA,IC6CeD,EAAAA,EAAAA,KAnCkB,SAAC5B,GAC9B,IAAMD,GAAW2C,EAAAA,EAAAA,MACTzC,GAAY0C,EAAAA,EAAAA,MAAZ1C,GACFf,GAAO0D,EAAAA,EAAAA,IAAe,SAACC,GAAK,OAAKA,EAAMC,QAAQ,IAErD,OACI,UAAC,KAAM,CACHC,oBAAkB,EAClBC,cAAe/D,EAAKC,GACpB+D,SAAU,SAACpD,GAAW,OAAKoD,GAASpD,EAAO,EAC3CqD,SAAU,SAACrD,EAAQC,GAAO,OACtBqD,GAAOtD,EAAQC,EAASC,EAAUC,EAAOC,EAAG,EAC/C,SAEA,gBACG8B,EAAY,EAAZA,aACAF,EAAM,EAANA,OACAC,EAAO,EAAPA,QACAjC,EAAM,EAANA,OACAuD,EAAa,EAAbA,cAAa,OAEb,UAAC7C,GAAK,CAAC8C,aAAa,MAAK,UACrB,UAAC,GAAQ,CACLxD,OAAQA,EACRkC,aAAcA,EACdF,OAAQA,EACRC,QAASA,EACTE,IAAKoB,KAEL,GAIxB,I,WCxCaE,GAAO9C,GAAAA,QAAAA,KAAW,qHAKpBG,GAAAA,EAAAA,SAIE4C,GAAU/C,GAAAA,QAAAA,IAAU,yGAKtBG,GAAAA,EAAAA,SCjBX,IDqBoBH,GAAAA,QAAAA,IAAU,mIAInBG,GAAAA,EAAAA,SAKYH,GAAAA,QAAAA,IAAU,qVACjBE,GAAAA,EAAAA,MAYLC,GAAAA,EAAAA,SAKWH,GAAAA,QAAAA,IAAU,+HAMrBG,GAAAA,EAAAA,SAISH,GAAAA,QAAAA,IAAU,sRACdE,GAAAA,EAAAA,MAQLC,GAAAA,EAAAA,SAMUH,GAAAA,QAAAA,GAAS,8HACnBE,GAAAA,EAAAA,MAKAC,GAAAA,EAAAA,SAIOH,GAAAA,QAAAA,GAAS,sEAGhBG,GAAAA,EAAAA,SAIOH,GAAAA,QAAAA,GAAS,gxBAyBHgD,GAAAA,EAAAA,gBAaAA,GAAAA,EAAAA,WAIb7C,GAAAA,EAAAA,SAISH,GAAAA,QAAAA,KAAW,iHAKpBG,GAAAA,EAAAA,SAISH,GAAAA,QAAAA,EAAQ,gPACjBE,GAAAA,EAAAA,MAUAC,GAAAA,EAAAA,SAIUH,GAAAA,QAAAA,IAAU,gPAOTE,GAAAA,EAAAA,MAEXC,GAAAA,EAAAA,SAISH,GAAAA,QAAAA,EAAQ,gIAIjBE,GAAAA,EAAAA,MAEAC,GAAAA,EAAAA,SE3KiB,WAC3B,OACC,UAAC2C,GAAI,WACJ,UAACC,GAAO,WACP,WAAC,IAAI,YACJ,UAAC,IAAI,CAACnB,KAAK,gBACX,UAAC,IAAW,CAACA,KAAK,gBAClB,UAAC,GAAI,UAKV,E,8IChBaqB,GAAQC,EAAAA,EAAAA,IACjB,aAAY,yCACZ,WAAOC,EAAS,GAAD,gFAIV,OAJc5D,EAAQ,EAARA,SACT6D,EAAO,CACTH,MAAOE,EAAIvB,KACXyB,SAAUF,EAAIE,UAChB,EAAD,OAEiBC,EAAAA,EAAAA,KAAW,GAAD,OCdxB,6BDc+B,uBAAuBF,GAAM,KAAD,EAAzDG,EAAG,QAETC,EAAAA,EAAAA,KAAM,WACFjE,GAASkE,EAAAA,EAAAA,GAAMF,EAAI7E,KAAKgF,WACxBnE,GAASoE,EAAAA,EAAAA,IAAKJ,EAAI7E,KAAKiF,MAC3B,IAAG,2CACN,qDAbW,IEHHC,GAAYV,EAAAA,EAAAA,IACrB,YAAW,yCACX,WAAOC,EAAS,GAAD,4EAAI5D,EAAQ,EAARA,UAEfiE,EAAAA,EAAAA,KAAM,WACFjE,GAAS+C,EAAAA,EAAAA,IAASa,GACtB,IAAG,2CACN,qDANU,G","sources":["components/edit/form/init.tsx","components/edit/form/submit.tsx","components/edit/form/styles.tsx","components/edit/form/form-body.tsx","components/edit/form/validate.tsx","components/edit/form/index.tsx","components/edit/form/component.tsx","components/edit/body/styles.tsx","components/edit/body/index.tsx","components/edit/body/component.tsx","redux/thunk/post-login.tsx","redux/api/index.tsx","redux/thunk/test-edit.tsx"],"sourcesContent":["interface MyFormValues {\n    stationName: string;\n    connectionName: string;\n    connectionDescription: string;\n    connectionHost: string;\n    connectionPort: string;\n    physicalMeterSerial: string;\n    physicalMeterHDLC: string;\n    physicalMeterPassword: string;\n    virtualMeterVoltageCoef: string;\n    virtualMeterCurrentCoef: string;\n}\n\nconst init: MyFormValues = {\n    stationName: \"\",\n    connectionName: \"\",\n    connectionDescription: \"\",\n    connectionHost: \"\",\n    connectionPort: \"\",\n    physicalMeterSerial: \"\",\n    physicalMeterHDLC: \"\",\n    physicalMeterPassword: \"\",\n    virtualMeterVoltageCoef: \"\",\n    virtualMeterCurrentCoef: \"\",\n};\n\nconst initialValues = (data: any) => {\n    return {\n        stationName: data.stationName || init.stationName,\n        connectionName: data.connectionName || init.connectionName,\n        connectionDescription: data.connectionDescription || init.connectionDescription,\n        connectionHost: data.connectionHost || init.connectionHost,\n        connectionPort: data.connectionPort || init.connectionPort,\n        physicalMeterSerial: data.physicalMeterSerial || init.physicalMeterSerial,\n        physicalMeterHDLC: data.physicalMeterHDLC || init.physicalMeterHDLC,\n        physicalMeterPassword: data.physicalMeterPassword || init.physicalMeterPassword,\n        virtualMeterVoltageCoef: data.virtualMeterVoltageCoef || init.virtualMeterVoltageCoef,\n        virtualMeterCurrentCoef: data.virtualMeterCurrentCoef || init.virtualMeterCurrentCoef,\n    };\n};\n\nexport default initialValues;","import * as a from \"redux/thunk\";\n\nfunction submit(\n    values: any,\n    actions: any,\n    dispatch: any,\n    props: any,\n    id: any,\n    // data: any\n) {\n    setTimeout(async () => {\n        // alert(JSON.stringify(values, null, 2));\n\n        dispatch(a.testeEdit(values));\n\n        props.history.push(`/details/${id}`);\n        actions.setSubmitting(false);\n    }, 400);\n}\n\nexport default submit;\n","import styled, { css } from \"styled-components\";\nimport colors from \"theme/colors\";\nimport device from \"theme/device\";\nimport { Form, Field } from \"formik\";\n\nexport const Forma = styled(Form)`\n  border-radius: 4px;\n  margin-top: 28px;\n  box-shadow: 0 1px 3px 0 rgba(50, 50, 50, 0.1);\n  background: ${colors.white};\n\n  @media ${device.mobileL} {\n  }\n`;\n\nexport const Section = styled.section`\n   padding: 24px 28px 36px;\n\n  @media ${device.mobileL} {\n    padding: 18px;\n  }\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n\n  @media ${device.mobileL} {\n    flex-direction: column;\n  }\n`;\n\nexport const Col = styled.div`\n  width: calc(100% / 2 - 15px);\n  \n  @media ${device.mobileL} {\n    width: 100%;\n    padding-bottom: 16px;\n\n    ${(props: any) =>\n    props.width &&\n    css`\n      width: 100%;\n    `}\n  }\n\n  ${(props: any) =>\n    props.width &&\n    css`\n      width: calc(100% / 2 - 7.5px);\n    `}\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  @media ${device.mobileL} {\n  }\n`;\n\nexport const Title = styled.h3`\n  font-size: 28px;\n  font-weight: bold;\n  line-height: 1.29;\n  color: ${colors.black};\n\n  @media ${device.mobileL} {\n  }\n`;\n\nexport const Name = styled.h3`\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 1.5;\n  padding-bottom: 4px;\n  color: ${colors.black};\n\n  @media ${device.mobileL} {\n  }\n`;\n\nexport const Inner = styled.div`\n  padding-top: 24px;\n\n  &:first-child {\n    padding-top: 0;\n  }\n\n  @media ${device.mobileL} {\n    padding-top: 16px;\n  }\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  height: 36px;\n  padding: 8px 12px 8px 12px;\n  border-radius: 4px;\n  border: 1px solid ${colors.grey3};\n  outline: 1px solid transparent;\n  background: ${colors.white};\n  font-size: 14px;\n  color: ${colors.black};\n  outline: none;\n\n  &:focus {\n    box-shadow: 0 2px 10px 0 rgba(26, 26, 26, 0.15);\n    border: 1px solid ${colors.black};\n    outline: 1px solid ${colors.black};\n  }\n\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  @media ${device.mobileL} {\n  }\n\n  ${(props: any) =>\n    props.validation &&\n    css`\n      background: ${colors.red3};\n      box-shadow: 0 2px 10px 0 rgba(255, 0, 101, 0.15) !important;\n      border: 1px solid ${colors.red};\n      outline: 1px solid ${colors.red};\n\n      &:focus {\n        border: 1px solid ${colors.red};\n        outline: 1px solid ${colors.red};\n        background: ${colors.red3};\n      }\n    `}\n`;\n\nexport const Tabs = styled.div`\n  background: ${colors.white};\n  display: flex;\n  padding: 8px 0;\n  margin-top: 30px;\n  margin-bottom: 28px;\n  height: 60px;\n  border-radius: 4px;\n  box-shadow: 0 1px 3px 0 rgba(50, 50, 50, 0.1);\n\n  @media ${device.mobileL} {\n    height: 50px;\n    margin-top: 15px;\n  }\n`;\n\nexport const Col6 = styled.label`\n  flex: 0 0 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  cursor: pointer;\n\n  ${(props: any) =>\n    props.$right &&\n    css`\n      border-left: 1px solid #ebedf0;\n    `}\n`;\n\nexport const TabTitle = styled.h4`\n  color: ${colors.grey1};\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.43;\n\n  @media ${device.mobileL} {\n    font-size: 12px;\n  }\n`;\n\nexport const Label = styled.label`\n  font-size: 13px;\n  font-weight: 600;\n  line-height: 1.43;\n  padding-bottom: 4px;\n  display: inline-block;\n\n  ${(props: any) =>\n    props.$pd &&\n    css`\n      padding-bottom: 8px;\n    `}\n\n  @media ${device.mobileL} {\n  }\n`;\n\nexport const TabInput = styled(Field)`\n  display: none;\n\n  &:hover ~ .checkmark {\n    box-shadow: 0 0 0 4px rgb(63 118 240 / 10%);\n    transition: box-shadow 200ms ease;\n  }\n\n  &:checked ~ .checkmark {\n    color: ${colors.black};\n\n    &:after {\n      content: \"\";\n      width: 126px;\n      height: 2px;\n      background-color: ${colors.red};\n      display: block;\n      position: absolute;\n      bottom: -8px;\n      left: 50%;\n      transform: translateX(-50%);\n    }\n  }\n\n  @media ${device.mobileL} {\n  }\n`;\n\nexport const Ul = styled.ul`\n  list-style: none;\n`;\n\nexport const Li = styled.li`\n  padding-bottom: 10px;\n\n  &:last-child {\n    padding-bottom: 0;\n  }\n`;\n\nexport const ListUl = styled.ul`\n  padding-left: 20px;\n`;\n\nexport const ListLi = styled.li`\n  padding-bottom: 10px;\n  color: ${colors.grey1};\n  text-transform: capitalize;\n\n  &:last-child {\n    padding-bottom: 0;\n  }\n`;\n\nexport const Note = styled.span`\n  color: ${colors.grey1};\n  padding-left: 8px;\n  font-weight: normal;\n`;\n\nexport const Description = styled.p`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.43;\n  color: ${colors.grey1};\n`;\n\nexport const Wrap = styled.div`\n  position: relative;\n  width: 100%;\n`;\n\nexport const Location = styled.div``;\n\nexport const WrapLocation = styled.div`\n  position: relative;\n  width: calc(100% - 52px);\n`;\n\nexport const Icon = styled.img`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  left: 11px;\n`;\n\nexport const NewFieldWrap = styled.label`\n  display: flex;\n`;\n\nexport const NewField = styled(Field)`\n  padding: 8px 12px;\n  height: 36px;\n  border-radius: 4px;\n  border: 1px solid ${colors.grey3};\n  outline: 1px solid transparent;\n  background: ${colors.white};\n  width: calc(100% - 52px);\n  outline: none;\n\n  &:focus {\n    box-shadow: 0 2px 10px 0 rgba(26, 26, 26, 0.15);\n    border: 1px solid ${colors.black};\n    outline: 1px solid ${colors.black};\n  }\n`;\n\nexport const PopWrap = styled.div`\n  position: relative;\n\n  &:hover {\n    & .popout {\n      visibility: visible;\n    }\n  }\n`;\n\nexport const AddBtn = styled.button`\n  background: ${colors.red3};\n  color: ${colors.red};\n  width: 36px;\n  height: 36px;\n  font-weight: 100;\n  border-radius: 4px;\n  font-size: 25px;\n  margin-left: 16px;\n  border: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: All 0.2s;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport const Popout = styled.div`\n  position: absolute;\n  left: 50%;\n  transform: translateX(-42%);\n  bottom: calc(100% + 8px);\n  visibility: hidden;\n  font-size: 12px;\n  width: max-content;\n  border-radius: 4px;\n  box-shadow: 0 3px 8px 1px rgba(50, 50, 50, 0.15);\n  background: ${colors.black};\n  color: ${colors.white};\n  padding: 4px 8px;\n  z-index: 999;\n`;\n\nexport const RemoveBtn = styled.button`\n  background: ${colors.grey4};\n  color: ${colors.grey1};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 36px;\n  height: 36px;\n  font-weight: 100;\n  border-radius: 4px;\n  cursor: pointer;\n  border: none;\n  outline: none;\n  transition: All 0.2s;\n  margin-left: 16px;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport const LocationUl = styled.ul`\n  list-style: none;\n  background: ${colors.white};\n  position: absolute;\n  margin-top: 45px;\n  width: calc(100% - 106px);\n  padding: 8px 0px;\n  z-index: 20;\n\n  ${(props: any) =>\n    props.$state &&\n    css`\n      box-shadow: rgb(0 0 0 / 25%) 0px 25px 30px -12px;\n      border-radius: 3px;\n    `}\n\n  ${(props: any) =>\n    !props.$state &&\n    css`\n      display: none;\n    `}\n\n  @media ${device.mobileL} {\n  }\n`;\n\nexport const LocationLi = styled.li`\n  position: relative;\n  padding: 8px 12px 8px 36px;\n\n  &:hover {\n    background: ${colors.grey5};\n    cursor: pointer;\n  }\n  @media ${device.mobileL} {\n  }\n`;\n\nexport const Delete = styled.img`\n  @media ${device.mobileL} {\n  }\n`;\n\nexport const Sup = styled.sup`\n  position: relative;\n  top: 3px;\n  color: ${colors.red2};\n\n  @media ${device.mobileL} {\n  }\n`;\n\nexport const Body = styled.div`\n  width: calc(100% - 285px);\n  padding-left: 32px;\n\n  @media ${device.mobileL} {\n    width: 100%;\n    padding-left: 0;\n  }\n`;\n\nexport const Sidebar = styled.aside`\n  background: ${colors.white};\n  width: 285px;\n  min-height: 80vh;\n  z-index: 2;\n  border-radius: 4px;\n  box-shadow: rgb(50 50 50 / 10%) 0px 1px 3px 0px;\n  padding-bottom: 10px;\n  display: block;\n\n  @media ${device.mobileL} {\n    display: none;\n  }\n`;\n\nexport const Footer = styled.footer`\n  height: 84px;\n  padding: 0 28px;\n  border-top: 1px solid ${colors.grey4};\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n\n  @media ${device.mobileL} {\n    height: 65px;\n    padding: 0 18px;\n  }\n`;","import React from \"react\";\nimport { t } from \"i18next\";\nimport { withRouter } from \"react-router-dom\";\nimport Button from \"components/reusable/button\";\nimport Select from \"components/reusable/selector\";\nimport options from \"components/reusable/station-name\";\nimport {\n    Section,\n    Inner,\n    Label,\n    Row,\n    Col,\n    Wrap,\n    Input,\n    Sup,\n    Footer,\n} from \"./styles\";\n\nconst Component: React.FC<any> = (props) => {\n    const { values, errors, touched, isSubmitting, sfv } = props;\n    const opt = options();\n\n    return (\n        <>\n            <Section>\n                <Inner>\n                    <Row>\n                        <Col>\n                            <Row>\n                                <Col {...props} width=\"sm\">\n                                    <Label {...props} $pd>\n                                        {t(\"Connection Name\")} <Sup>*</Sup>\n                                    </Label>\n                                    <Wrap>\n                                        <Input\n                                            name=\"connectionName\"\n                                            validation={\n                                                errors.connectionName &&\n                                                touched.connectionName\n                                            }\n                                        />\n                                    </Wrap>\n                                </Col>\n                                <Col {...props} width=\"sm\">\n                                    <Label {...props} $pd>\n                                        {t(\"Connection Description\")} <Sup>*</Sup>\n                                    </Label>\n                                    <Wrap>\n                                        <Input\n                                            name=\"connectionDescription\"\n                                            validation={\n                                                errors.connectionDescription &&\n                                                touched.connectionDescription\n                                            }\n                                        />\n                                    </Wrap>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col>\n                            <Row>\n                                <Col {...props} width=\"sm\">\n                                    <Label {...props} $pd>\n                                        {t(\"Connection Host\")} <Sup>*</Sup>\n                                    </Label>\n                                    <Wrap>\n                                        <Input\n                                            name=\"connectionHost\"\n                                            validation={\n                                                errors.connectionHost &&\n                                                touched.connectionHost\n                                            }\n                                        />\n                                    </Wrap>\n                                </Col>\n                                <Col {...props} width=\"sm\">\n                                    <Label {...props} $pd>\n                                        {t(\"Connection Port\")} <Sup>*</Sup>\n                                    </Label>\n                                    <Wrap>\n                                        <Input\n                                            name=\"connectionPort\"\n                                            validation={\n                                                errors.connectionPort &&\n                                                touched.connectionPort\n                                            }\n                                        />\n                                    </Wrap>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Inner>\n\n                <Inner>\n                    <Row>\n                        <Col>\n                            <Row>\n                                <Col {...props} width=\"sm\">\n                                    <Label {...props} $pd>\n                                        {t(\"Physical Meter Serial\")} <Sup>*</Sup>\n                                    </Label>\n                                    <Wrap>\n                                        <Input\n                                            name=\"physicalMeterSerial\"\n                                            validation={\n                                                errors.physicalMeterSerial &&\n                                                touched.physicalMeterSerial\n                                            }\n                                        />\n                                    </Wrap>\n                                </Col>\n                                <Col {...props} width=\"sm\">\n                                    <Label {...props} $pd>\n                                        {t(\"Physical Meter HDLC\")} <Sup>*</Sup>\n                                    </Label>\n                                    <Wrap>\n                                        <Input\n                                            name=\"physicalMeterHDLC\"\n                                            validation={\n                                                errors.physicalMeterHDLC &&\n                                                touched.physicalMeterHDLC\n                                            }\n                                        />\n                                    </Wrap>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col>\n                            <Row>\n                                <Col {...props} width=\"sm\">\n                                    <Label {...props} $pd>\n                                        {t(\"Physical Meter Password\")} <Sup>*</Sup>\n                                    </Label>\n                                    <Wrap>\n                                        <Input\n                                            name=\"physicalMeterPassword\"\n                                            validation={\n                                                errors.physicalMeterPassword &&\n                                                touched.physicalMeterPassword\n                                            }\n                                        />\n                                    </Wrap>\n                                </Col>\n                                <Col {...props} width=\"sm\">\n                                    <Label {...props} $pd>\n                                        {t(\"Station name\")} <Sup>*</Sup>\n                                    </Label>\n                                    <Wrap>\n                                        <Select name=\"stationName\" options={opt} sfv={sfv} defaultValue={values.stationName} />\n                                    </Wrap>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Inner>\n\n                <Inner>\n                    <Row>\n                        <Col>\n                            <Label>\n                                {t(\"Virtual Meter Voltage Coef\")} <Sup>*</Sup>\n                            </Label>\n                            <Wrap>\n                                <Input\n                                    name=\"virtualMeterVoltageCoef\"\n                                    validation={\n                                        errors.virtualMeterVoltageCoef &&\n                                        touched.virtualMeterVoltageCoef\n                                    }\n                                />\n                            </Wrap>\n                        </Col>\n                        <Col>\n                            <Label>\n                                {t(\"Virtual Meter Current Coef\")} <Sup>*</Sup>\n                            </Label>\n                            <Wrap>\n                                <Input\n                                    name=\"virtualMeterCurrentCoef\"\n                                    validation={\n                                        errors.virtualMeterCurrentCoef &&\n                                        touched.virtualMeterCurrentCoef\n                                    }\n                                />\n                            </Wrap>\n                        </Col>\n                    </Row>\n                </Inner>\n            </Section>\n            <Footer>\n                <Button auto color=\"blue\" active={isSubmitting} type=\"submit\">\n                    {t(\"Save changes\")}\n                </Button>\n            </Footer>\n        </>\n    );\n};\n\nexport default withRouter(Component);","interface MyFormValues {\n    stationName: string;\n    connectionName: string;\n    connectionDescription: string;\n    connectionHost: string;\n    connectionPort: string;\n    physicalMeterSerial: string;\n    physicalMeterHDLC: string;\n    physicalMeterPassword: string;\n    virtualMeterVoltageCoef: string;\n    virtualMeterCurrentCoef: string;\n}\n\nconst validate = (values: MyFormValues) => {\n    let errors: any = {};\n\n    if (!values.stationName) {\n        errors.stationName = \"Required\";\n    }\n    if (!values.connectionName) {\n        errors.connectionName = \"Required\";\n    }\n    if (!values.connectionDescription) {\n        errors.connectionDescription = \"Required\";\n    }\n    if (!values.connectionHost) {\n        errors.connectionHost = \"Required\";\n    }\n    if (!values.connectionPort) {\n        errors.connectionPort = \"Required\";\n    }\n    if (!values.physicalMeterSerial) {\n        errors.physicalMeterSerial = \"Required\";\n    }\n    if (!values.physicalMeterHDLC) {\n        errors.physicalMeterHDLC = \"Required\";\n    }\n    if (!values.physicalMeterPassword) {\n        errors.physicalMeterPassword = \"Required\";\n    }\n    if (!values.virtualMeterVoltageCoef) {\n        errors.virtualMeterVoltageCoef = \"Required\";\n    }\n    if (!values.virtualMeterCurrentCoef) {\n        errors.virtualMeterCurrentCoef = \"Required\";\n    }\n\n    return errors;\n};\n\nexport default validate;","import Component from \"./component\";\n\nexport default Component;","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { useAppSelector } from \"redux/hooks\";\nimport { Formik } from \"formik\";\nimport init from \"./init\";\nimport submit from \"./submit\";\nimport FormBody from \"./form-body\";\nimport validate from \"./validate\";\nimport { Forma } from \"./styles\";\n\nconst Component: React.FC<any> = (props) => {\n    const dispatch = useDispatch();\n    const { id }: any = useParams();\n    const data = useAppSelector((state) => state.mockData);\n\n    return (\n        <Formik\n            enableReinitialize\n            initialValues={init(data)}\n            validate={(values: any) => validate(values)}\n            onSubmit={(values, actions) =>\n                submit(values, actions, dispatch, props, id)\n            }\n        >\n            {({\n                isSubmitting,\n                errors,\n                touched,\n                values,\n                setFieldValue,\n            }) => (\n                <Forma autoComplete=\"off\">\n                    <FormBody\n                        values={values}\n                        isSubmitting={isSubmitting}\n                        errors={errors}\n                        touched={touched}\n                        sfv={setFieldValue}\n                    />\n                </Forma>\n            )}\n        </Formik>\n    );\n};\n\nexport default withRouter(Component);\n","import styled from \"styled-components\";\nimport colors from \"theme/colors\";\nimport device from \"theme/device\";\nimport img from \"img\";\n\nexport const Main = styled.main`\n  margin-top: 60px;\n  padding-top: 32px;\n  padding-bottom: 60px;\n\n  @media ${device.mobileL} {\n  }\n`;\n\nexport const Wrapper = styled.div`\n  width: 1140px;\n  max-width: 90%;\n  margin: 0 auto;\n\n  @media ${device.mobileL} {\n  }\n`;\n\nexport const Flex = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media ${device.mobileL} {\n    flex-direction: column;\n  }\n`;\n\nexport const Picture = styled.div`\n  background: ${colors.white};\n  border-radius: 4px;\n  box-shadow: rgb(50 50 50 / 10%) 0px 1px 3px 0px;\n  position: relative;\n  width: 255px;\n  min-height: 200px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 0 28px;\n\n  @media ${device.mobileL} {\n    width: 100%;\n  }\n`;\n\nexport const Avatar = styled.img`\n  width: 96px;\n  height: 96px;\n  border-radius: 50%;\n  object-fit: cover;\n\n  @media ${device.mobileL} {\n  }\n`;\n\nexport const Info = styled.div`\n  background: ${colors.white};\n  border-radius: 4px;\n  box-shadow: rgb(50 50 50 / 10%) 0px 1px 3px 0px;\n  padding: 28px;\n  position: relative;\n  min-height: 200px;\n  width: calc(100% - 285px);\n\n  @media ${device.mobileL} {\n    width: 100%;\n    margin-top: 28px;\n  }\n`;\n\nexport const Title = styled.h3`\n  color: ${colors.black};\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 1.5;\n\n  @media ${device.mobileL} {\n  }\n`;\n\nexport const Ul = styled.ul`\n  list-style: none;\n\n  @media ${device.mobileL} {\n  }\n`;\n\nexport const Li = styled.li`\n  position: relative;\n  margin-top: 32px;\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    width: 36px;\n    height: 36px;\n    background: #ebedf0;\n    border-radius: 50%;\n  }\n\n  &:nth-child(1) {\n    &:after {\n      content: \"\";\n      width: 16px;\n      height: 16px;\n      position: absolute;\n      left: 10px;\n      top: 50%;\n      transform: translateY(-50%);\n      background: url(${img.iconDateOfBirth});\n    }\n  }\n\n  &:nth-child(2) {\n    &:after {\n      content: \"\";\n      width: 16px;\n      height: 16px;\n      position: absolute;\n      left: 10px;\n      top: 50%;\n      transform: translateY(-50%);\n      background: url(${img.iconSalary});\n    }\n  }\n\n  @media ${device.mobileL} {\n  }\n`;\n\nexport const Span = styled.span`\n  padding-left: 50px;\n  font-size: 14px;\n  font-weight: 600;\n\n  @media ${device.mobileL} {\n  }\n`;\n\nexport const Name = styled.p`\n  color: ${colors.black};\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 1.5;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 100%;\n  margin-top: 10px;\n\n  @media ${device.mobileL} {\n  }\n`;\n\nexport const About = styled.div`\n  width: 100%;\n  min-height: 147px;\n  margin-top: 28px;\n  padding: 24px 38px 28px 28px;\n  border-radius: 4px;\n  box-shadow: 0 1px 3px 0 rgba(50, 50, 50, 0.1);\n  background-color: ${colors.white};\n\n  @media ${device.mobileL} {\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 14px;\n  line-height: 1.43;\n  padding-top: 12px;\n  color: ${colors.black};\n\n  @media ${device.mobileL} {\n  }\n`;","import Component from \"./component\";\n\nexport default Component;\n","import React from \"react\";\nimport Head from \"components/head\";\nimport Breadcrumbs from \"components/breadcrumbs\";\nimport Wrap from \"components/wrap\";\nimport Form from \"../form\";\nimport {\n\tMain,\n\tWrapper,\n} from \"./styles\";\n\nconst Edit: React.FC<any> = () => {\n\treturn (\n\t\t<Main>\n\t\t\t<Wrapper>\n\t\t\t\t<Wrap>\n\t\t\t\t\t<Head name=\"Edit meter\" />\n\t\t\t\t\t<Breadcrumbs name=\"Edit meter\" />\n\t\t\t\t\t<Form />\n\t\t\t\t</Wrap>\n\t\t\t</Wrapper>\n\t\t</Main>\n\t);\n};\n\nexport default Edit;\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { batch } from \"react-redux\";\nimport { token, user } from \"redux/reducer\";\nimport axios from \"axios\";\nimport API from \"redux/api\";\n\nexport const login = createAsyncThunk(\n    \"User login\",\n    async (val: any, { dispatch }) => {\n        const body = {\n            login: val.name,\n            password: val.password,\n        };\n\n        const res = await axios.post(`${API}/token/authenticate`, body);\n\n        batch(() => {\n            dispatch(token(res.data.jwtToken));\n            dispatch(user(res.data.user));\n        });\n    }\n);\n","const API = \"http://kindzadza.icu:64988\";\n\nexport default API;\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { batch } from \"react-redux\";\nimport { mockData } from \"redux/reducer\";\n\nexport const testeEdit = createAsyncThunk(\n    \"testeEdit\",\n    async (val: any, { dispatch }) => {\n\n        batch(() => {\n            dispatch(mockData(val));\n        });\n    }\n);\n"],"names":["init","data","stationName","connectionName","connectionDescription","connectionHost","connectionPort","physicalMeterSerial","physicalMeterHDLC","physicalMeterPassword","virtualMeterVoltageCoef","virtualMeterCurrentCoef","values","actions","dispatch","props","id","setTimeout","a","history","push","setSubmitting","Forma","styled","Form","colors","device","Section","Row","Col","width","css","Inner","Input","Field","validation","Label","$right","$pd","Wrap","Sup","$state","Footer","withRouter","errors","touched","isSubmitting","sfv","opt","options","t","name","defaultValue","auto","color","active","type","useDispatch","useParams","useAppSelector","state","mockData","enableReinitialize","initialValues","validate","onSubmit","submit","setFieldValue","autoComplete","Main","Wrapper","img","login","createAsyncThunk","val","body","password","axios","res","batch","token","jwtToken","user","testeEdit"],"sourceRoot":""}