{"version":3,"file":"static/js/108.b06d210f.chunk.js","mappings":"2PAKaA,EAAOC,EAAAA,QAAAA,KAAW,mFAIpBC,EAAAA,EAAAA,SAIEC,EAAUF,EAAAA,QAAAA,IAAU,qGAKtBC,EAAAA,EAAAA,SAIEE,EAAQH,EAAAA,QAAAA,IAAU,gEAGpBC,EAAAA,EAAAA,S,GAIYD,EAAAA,QAAAA,QAAc,sSAWrBI,EAAAA,EAAAA,OAGIJ,EAAAA,QAAAA,IAAU,wCAIJA,EAAAA,QAAAA,GAAS,0KAMxBI,EAAAA,EAAAA,MAEAH,EAAAA,EAAAA,SAIkBD,EAAAA,QAAAA,EAAQ,+IAK1BI,EAAAA,EAAAA,MAEAH,EAAAA,EAAAA,S,QChEX,ECG4B,WACxB,OACI,SAACF,EAAI,WACD,SAACG,EAAO,WACJ,SAACC,EAAK,WACM,SAAC,IAAI,SAKjC,C,0HCeA,EAnBsB,CAClB,CACIE,GAAI,GACJC,MAAO,wFACPC,SAAU,oBACVC,KAAM,OACNC,MAAOL,EAAAA,EAAAA,MACPM,QAASN,EAAAA,EAAAA,OAEb,CACIC,GAAI,GACJC,MAAO,kFACPC,SAAU,oBACVC,KAAM,OACNC,MAAOL,EAAAA,EAAAA,MACPM,QAASN,EAAAA,EAAAA,Q,sCCrBJO,EAAQX,EAAAA,QAAAA,GAAS,2HACnBI,EAAAA,EAAAA,MAKAH,EAAAA,EAAAA,SAIEW,EAAWZ,EAAAA,QAAAA,EAAQ,sGACrBI,EAAAA,EAAAA,MAIAH,EAAAA,EAAAA,SAIEY,EAAKb,EAAAA,QAAAA,GAAS,yGAKhBC,EAAAA,EAAAA,SAIEa,EAAKd,EAAAA,QAAAA,GAAS,iGAIhBC,EAAAA,EAAAA,SAIEc,GAAIf,EAAAA,EAAAA,SAAOgB,EAAAA,GAAPhB,CAAY,ymBACbI,EAAAA,EAAAA,MAeEA,EAAAA,EAAAA,MAKIA,EAAAA,EAAAA,MAKXH,EAAAA,EAAAA,SAOEgB,EAAOjB,EAAAA,QAAAA,IAAU,kEAKjBkB,EAAKlB,EAAAA,QAAAA,IAAU,+CAIfmB,EAAOnB,EAAAA,QAAAA,IAAU,+CAIjBoB,EAAQpB,EAAAA,QAAAA,IAAU,gF,GAMRA,EAAAA,QAAAA,QAAc,sSAWrBI,EAAAA,EAAAA,OAGIJ,EAAAA,QAAAA,IAAU,wCAIJA,EAAAA,QAAAA,GAAS,0KAMxBI,EAAAA,EAAAA,MAEAH,EAAAA,EAAAA,SAIkBD,EAAAA,QAAAA,EAAQ,+IAK1BI,EAAAA,EAAAA,MAEAH,EAAAA,EAAAA,S,QC3FX,EAjC4B,WA8BxB,OA5BmB,WACf,IAAMoB,EAAOC,EAAAA,KAAS,SAACC,GAAI,OACvB,SAACT,EAAE,WACC,UAACC,EAAC,CAACS,GAAE,mBAAcD,EAAKlB,IAAK,WACzB,UAACY,EAAI,YACD,SAACC,EAAE,WACC,SAAC,KAAM,CACHO,IAAI,GACJC,KAAMH,EAAKlB,GAAGsB,WAAWC,MAAM,IAAIC,KAAK,KACxCpB,MAAOc,EAAKd,MACZC,QAASa,EAAKb,QACdoB,KAAK,OACLC,OAAK,OAIb,UAACZ,EAAI,YACD,SAACR,EAAK,UAAEY,EAAKjB,SACb,SAACM,EAAQ,UAAEW,EAAKhB,kBAGxB,SAACa,EAAK,CAACK,IAAKO,EAAAA,EAAAA,gBAnBXT,EAAKlB,GAqBT,IAET,OAAO,SAACQ,EAAE,UAAEQ,GAChB,CAEOY,EACX,ECnCA,G","sources":["components/home/body/styles.tsx","components/home/body/index.tsx","components/home/body/component.tsx","components/list/data.tsx","components/list/styles.tsx","components/list/component.tsx","components/list/index.tsx"],"sourcesContent":["import styled, { css } from \"styled-components\";\nimport colors from \"theme/colors\";\nimport device from \"theme/device\";\nimport { Link } from \"react-router-dom\";\n\nexport const Main = styled.main`\n  width: 100%;\n  margin-top: 60px;\n\n  @media ${device.mobileL} {\n  }\n`;\n\nexport const Wrapper = styled.div`\n  width: 760px;\n  max-width: 90%;\n  margin: 0 auto;\n\n  @media ${device.mobileL} {\n  }\n`;\n\nexport const Inner = styled.div`\n  display: flex;\n\n  @media ${device.mobileL} {\n  }\n`;\n\nexport const Section = styled.section`\n  width: 760px;\n  height: 280px;\n  border-radius: 4px;\n  box-shadow: rgb(50 50 50 / 10%) 0px 1px 3px 0px;\n  margin-top: 30px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  background: ${colors.white};\n`;\n\nexport const Icon = styled.img`\n  width: 60px;\n`;\n\nexport const EmptyTitle = styled.h2`\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 1.5;\n  padding-top: 30px;\n  padding-bottom: 10px;\n  color: ${colors.black};\n\n  @media ${device.mobileL} {\n  }\n`;\n\nexport const EmptySubtitle = styled.p`\n  font-size: 14px;\n  line-height: 1.43;\n  max-width: 441px;\n  margin: 0 auto;\n  color: ${colors.black};\n\n  @media ${device.mobileL} {\n  }\n`;\n","import Component from \"./component\";\n\nexport default Component;","import React from \"react\";\nimport List from \"components/list\";\nimport Empty from \"./empty\";\nimport { Main, Wrapper, Inner } from \"./styles\";\n\nconst Hero: React.FC<any> = () => {\n    return (\n        <Main>\n            <Wrapper>\n                <Inner>\n                    {true ? <List /> : <Empty />}\n                </Inner>\n            </Wrapper>\n        </Main>\n    );\n};\n\nexport default Hero;\n","import colors from \"theme/colors\";\n\ntype types = {\n    id: number;\n    title: string;\n    subtitle: string;\n    hdlc: string;\n    color: string;\n    fgColor: string;\n};\n\nconst data: types[] = [\n    {\n        id: 70,\n        title: \"Калараш Бравичи\",\n        subtitle: \"10.111.10.99:1000\",\n        hdlc: \"1552\",\n        color: colors.blue3,\n        fgColor: colors.blue2,\n    },\n    {\n        id: 72,\n        title: \"Калараш Лозово\",\n        subtitle: \"10.111.10.99:1000\",\n        hdlc: \"2327\",\n        color: colors.blue3,\n        fgColor: colors.blue2,\n    },\n];\n\nexport default data;","import styled from \"styled-components\";\nimport colors from \"theme/colors\";\nimport device from \"theme/device\";\nimport { Link } from \"react-router-dom\";\n\nexport const Title = styled.h2`\n  color: ${colors.black};\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 2.2;\n\n  @media ${device.mobileL} {\n  }\n`;\n\nexport const Subtitle = styled.p`\n  color: ${colors.grey1};\n  font-size: 16px;\n  font-weight: 500;\n\n  @media ${device.mobileL} {\n  }\n`;\n\nexport const Ul = styled.ul`\n  list-style: none;\n  width: 100%;\n  padding-top: 28px;\n\n  @media ${device.mobileL} {\n  }\n`;\n\nexport const Li = styled.li`\n    margin-bottom: 28px;\n    position: relative;\n\n  @media ${device.mobileL} {\n  }\n`;\n\nexport const A = styled(Link)`\n  background: ${colors.white};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 108px;\n  border-radius: 4px;\n  box-shadow: 0 1px 3px 0 rgba(50, 50, 50, 0.1);\n  padding: 0 28px;\n  text-decoration: none;\n  border: 1px solid transparent;\n  transition: All 0.15s linear;\n  position: relative;\n  z-index: 10;\n\n  &:hover {\n    background: ${colors.grey5};\n    border: 1px solid rgba(136, 149, 162, 0.2);\n\n    & .user {\n      &:before {\n        background: ${colors.grey5};\n      }\n    }\n  }\n\n  @media ${device.mobileL} {\n    padding: 0 15px;\n    height: 75px;\n    padding: 0 18px;\n  }\n`;\n\nexport const Flex = styled.div`\n  display: flex;\n  padding-right: 20px;\n`;\n\nexport const ID = styled.div`\n  position: relative;\n`;\n\nexport const Wrap = styled.div`\n  padding-left: 20px;\n`;\n\nexport const Arrow = styled.img`\n  width: 24px;\n  height: 24px;\n  position: relative;\n`;\n\nexport const Section = styled.section`\n  width: 760px;\n  height: 280px;\n  border-radius: 4px;\n  box-shadow: rgb(50 50 50 / 10%) 0px 1px 3px 0px;\n  margin-top: 30px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  background: ${colors.white};\n`;\n\nexport const Icon = styled.img`\n  width: 60px;\n`;\n\nexport const EmptyTitle = styled.h2`\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 1.5;\n  padding-top: 30px;\n  padding-bottom: 10px;\n  color: ${colors.black};\n\n  @media ${device.mobileL} {\n  }\n`;\n\nexport const EmptySubtitle = styled.p`\n  font-size: 14px;\n  line-height: 1.43;\n  max-width: 441px;\n  margin: 0 auto;\n  color: ${colors.black};\n\n  @media ${device.mobileL} {\n  }\n`;\n","import React from \"react\";\nimport Avatar from \"react-avatar\";\nimport img from \"img\";\nimport data from \"./data\";\nimport { Ul, Li, A, Title, Subtitle, Flex, Wrap, ID, Arrow } from \"./styles\";\n\nconst List: React.FC<any> = () => {\n\n    const renderList = () => {\n        const list = data.map((item) =>\n            <Li key={item.id}>\n                <A to={`/details/${item.id}`}>\n                    <Flex>\n                        <ID>\n                            <Avatar\n                                src=\"\"\n                                name={item.id.toString().split(\"\").join(\" \")}\n                                color={item.color}\n                                fgColor={item.fgColor}\n                                size=\"68px\"\n                                round\n                            />\n                        </ID>\n\n                        <Wrap>\n                            <Title>{item.title}</Title>\n                            <Subtitle>{item.subtitle}</Subtitle>\n                        </Wrap>\n                    </Flex>\n                    <Arrow src={img.iconArrow} />\n                </A>\n            </Li>\n        );\n        return <Ul>{list}</Ul>\n    };\n\n    return renderList();\n};\n\nexport default List;\n","import Component from \"./component\";\n\nexport default Component;"],"names":["Main","styled","device","Wrapper","Inner","colors","id","title","subtitle","hdlc","color","fgColor","Title","Subtitle","Ul","Li","A","Link","Flex","ID","Wrap","Arrow","list","data","item","to","src","name","toString","split","join","size","round","img","renderList"],"sourceRoot":""}